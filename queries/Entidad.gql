# EMPLEADOS
# query buscarEntidadEmpleados($busqueda: BuscarEntidadDto!) {
#   entidadBuscar(
#     busqueda: $busqueda
#     opciones: { populate: ["empleados"], limit: 0 }
#   ) {
#     _id
#     nombre
#     empleados {
#       _id
#       cargo
#       persona {
#         nombre
#         correo
#         telefono
#       }
#     }
#   }
# }
query buscarEntidadEmpleados(
  $busqueda: BuscarEntidadDto!
  $busquedaEmpleado: BuscarEmpleadoDto!
  $opciones: EntidadOpcionesDto
) {
  entidadBuscarEmpleado(
    busqueda: $busqueda
    busquedaEmpleado: $busquedaEmpleado
    opciones: $opciones
  ) {
    _id
    persona {
      _id
      nombre
      apellido
      correo
      telefono
    }
    cargo
  }
}

# Error al poner nombre, solo con _id funciona
# mutation agregarEmpleadoEntidad(
#   $busqueda: BuscarEntidadDto!
#   $datos: AgregarEmpleadoDto!
# ) {
#   entidadAgregarEmpleado(busqueda: $busqueda, datos: $datos) {
#     _id
#     cargo
#     persona {
#       _id
#       # nombre
#     }
#   }
# }
mutation agregarEmpleadoEntidad(
  $busqueda: BuscarEntidadDto!
  $datos: CrearEmpleadoDto!
) {
  entidadCrearEmpleado(
    busqueda: $busqueda
    datos: $datos
    opciones: { populate: true }
  ) {
    _id
    cargo
    persona {
      nombre
    }
  }
}

mutation borrarEmpleadoEntidad(
  $busqueda: BuscarEntidadDto!
  $busquedaEmpleado: BuscarEmpleadoDto!
) {
  entidadBorrarEmpleado(
    busqueda: $busqueda
    busquedaEmpleado: $busquedaEmpleado
    opciones: {}
  )
}

################ ALMACEN ################
# BUSCAR STOCKS DE UNA ENTIDAD
# query buscarStocks($busqueda: BuscarEntidadDto!) {
#   entidadBuscar(
#     busqueda: $busqueda
#     opciones: { limit: 0, populate: ["almacen"] }
#   ) {
#     almacen {
#       producto {
#         _id
#         nombre
#         presentaciones {
#           nombre
#           cantidad
#         }
#       }
#       cantidadLimite
#       lotes {
#         vencimiento
#         cantidad
#         bloque
#       }
#       inventarios {
#         fecha
#         lotes {
#           vencimiento
#           cantidad
#           bloque
#           presentacion
#           cantidadPresentacion
#         }
#         diferencias {
#           vencimiento
#           diferencia
#         }
#       }
#     }
#     problemas {
#       _id
#     }
#   }
# }

query buscarStocks(
  $busqueda: BuscarEntidadDto!
  $opciones: EntidadOpcionesDto
) {
  entidadBuscar(busqueda: $busqueda, opciones: { populate: true, limit: 0 }) {
    _id
    nombre
    almacen {
      producto {
        _id
        nombre
        presentaciones {
          nombre
          cantidad
        }
      }
      cantidadLimite
      lotes {
        vencimiento
        cantidad
        bloque
      }
    }
    problemas {
      _id
      producto {
        nombre
      }
    }
  }
}

# modificar cantidadLimite
# mutation modificarCantidadLimite(
#   $entidadBusqueda: BuscarEntidadDto!
#   $productoBusqueda: BuscarProductoDto!
#   $datos: ModificarStockDto!
# ) {
#   entidadModificarStock(
#     entidadBusqueda: $entidadBusqueda
#     productoBusqueda: $productoBusqueda
#     datos: $datos
#     opciones: {}
#   ) {
#     producto {
#       _id
#     }
#     cantidadLimite
#   }
# }
mutation modificarCantidadLimite(
  $entidadBusqueda: BuscarEntidadDto!
  $productoBusqueda: BuscarProductoDto!
  $datos: ModificarStockDto!
) {
  entidadModificarStock(
    entidadBusqueda: $entidadBusqueda
    productoBusqueda: $productoBusqueda
    datos: $datos
  ) {
    producto {
      _id
    }
    cantidadLimite
  }
}

# INVENTARIO
# mutation hacerInventario(
#   $entidadBusqueda: BuscarEntidadDto!
#   $datos: AgregarInventarioDto!
#   $guardar: Boolean!
# ) {
#   entidadHacerInventario(
#     entidadBusqueda: $entidadBusqueda
#     datos: $datos
#     guardar: $guardar
#     opciones: { populate: true }
#   ) {
#     producto {
#       _id
#       nombre
#     }
#     cantidadLimite
#     lotes {
#       vencimiento
#       cantidad
#       bloque
#     }
#     inventarios {
#       persona {
#         _id
#       }
#       lotes {
#         vencimiento
#         cantidad
#         bloque
#         presentacion
#         cantidadPresentacion
#       }
#       diferencias {
#         vencimiento
#         diferencia
#       }
#       reporte
#       fecha
#     }
#   }
# }
mutation hacerInventario(
  $entidadBusqueda: BuscarEntidadDto!
  $datos: CrearInventarioDto!
  $guardar: Boolean!
  $opciones: EntidadOpcionesDto
) {
  entidadHacerInventario(
    entidadBusqueda: $entidadBusqueda
    datos: $datos
    guardar: $guardar
    opciones: { populate: true }
  ) {
    fecha
    producto {
      _id
      nombre
    }
    reporte
    diferencias {
      vencimiento
      diferencia
    }
    lotes {
      vencimiento
      cantidad
      bloque
      presentacion
      cantidadPresentacion
    }
  }
}

# LISTA DE PROBLEMAS DE INVENTARIO
# mutation ListarProblemas(
#   $entidadBusqueda: BuscarEntidadDto!
#   $problemaBusqueda: BuscarProblemaDto!
# ) {
#   entidadListarProblemas(
#     entidadBusqueda: $entidadBusqueda
#     problemaBusqueda: $problemaBusqueda
#     opciones: {}
#   ) {
#     _id
#     producto {
#       _id
#     }
#     diferencias {
#       vencimiento
#       diferencia
#     }
#     fechaAparicion
#     fechaResolucion
#     reporte
#     resuelto
#   }
# }
mutation ListarProblemas(
  $entidadBusqueda: BuscarEntidadDto!
  $problemaBusqueda: BuscarProblemaDto!
  $opciones: EntidadOpcionesDto
) {
  entidadListarProblemas(
    entidadBusqueda: $entidadBusqueda
    problemaBusqueda: $problemaBusqueda
    opciones: { populate: true }
  ) {
    _id
    inventario {
      _id
    }
    producto {
      _id
      nombre
    }
    diferencias {
      vencimiento
      diferencia
    }
    fechaAparicion
    fechaResolucion
    reporte
    resuelto
  }
}

# RESOLVER PROBLEMA
mutation ResolverProblema(
  $entidadBusqueda: BuscarEntidadDto!
  $problemaBusqueda: BuscarProblemaDto!
  $datos: ResolverProblemaDto!
) {
  entidadResolverProblema(
    entidadBusqueda: $entidadBusqueda
    problemaBusqueda: $problemaBusqueda
    datos: $datos
    opciones: { populate: true }
  ) {
    _id
    inventario {
      _id
    }
    producto {
      _id
      nombre
    }
    diferencias {
      vencimiento
      diferencia
    }
    fechaAparicion
    fechaResolucion
    reporte
    resuelto
  }
}
